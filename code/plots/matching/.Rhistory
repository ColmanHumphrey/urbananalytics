length(crime_diffs)
ls()
ls()
length(crime_diff)
length(crime_diff[[1]])
length(crime_diff[[1]][[1]])
dim(crime_diff[[1]][[1]])
temp = crime_diff[[1]][[1]]
temp
temp[,1]
t.test(temp[,1])
time_var = 'total'
bus_type = 'cafe'
t_temp
t_temp
rel_diff
rel_Diff
rel_diff
t_temp_rel
t_temp
names(t_temp[[1]])
t_temp[[1]]$estimate
ests
p_val
sign(-1)
sign_p
p_val
rel_sign_p
wilcox.test(crime_diff[,1])
wilcox.test(crime_diff[[1]][[1]][,1])
wilcox_res
names(wilcox_res)
names(wilcox_res[[1]])
wilcox_res[[1]]$p.value
wilcox_res[[1]][[2]]
wilcox_res[[1]][[1]]
wilcox_res[[1]][[]]
wilcox_res[[1]][[5]]
res_mat
res_mat
t_temp
res_mat
res_mat
time_var
bus_type
warnings()
res_list
res_list[[1]]
res_list[['total']]
t_temp
lapply(t_temp, '[[', 'df')
names(t_temp[[1]])
lapply(t_temp, '[[', 'parameter')
nrow(crime_diff[[time_var]][[bus_type]])
res_list[[1]][[1]]
res_list[[1]]
long_df[1:10,]
long_df[1:3,]
long_df[1:30,]
long_df[1:11,
]
long_df
long_df
long_df
long_df
on
long_df
res_list[[1]]
long_df
long_df
pval_bonf
col2rgb(rosybrown1)
col2rgb('rosybrown1')
193 / 16
193 %% 16
col2rgb('firebrick')
col2rgb('red')
col2rgb('dodgerblue1')
col2rgb('cornflowerblue')
200 / 165
200 / 16
long_df
plot(1:30, col = long_df$p_col, pch = 20, cex = 5)
long_df$p_col
plot(1:30, col = long_df$p_col, pch = 20, cex = 5)
plot(1:4, pch = 15, col = c('#FFC1C1', '#5050C8', '#C85050', '#C1C1FF'))
plot(1:4, pch = 15, col = c('#FFC1C1', '#5050C8', '#C85050', '#C1C1FF'), cex = 20)
col2rgb('brown1')
50 / 16
plot(1:4, col = c('#FFC1C1', '#3434C8', '#C83434', '#C1C1FF'), pch = 15, cex = 20)
colplot <- function(cols){plot(1:length(cols), y = 1, ylim = c(0, 2), xlim = c(0, length(cols) + 1),
colplot <- function(cols){plot(1:length(cols), y = 1, ylim = c(0, 2), xlim = c(0, length(cols) + 1),
pch 
colplot <- function(cols, cexv){plot(1:length(cols), y = 1, ylim = c(0, 2), xlim = c(0, length(cols) + 1),
pch = 15, cex = cexv, col = cols)}
colplot(c('#FFC1C1', '#C83434', '#3434C8', '#C1C1FF'), 20)
colplot <- function(cols, cexv){plot(1:length(cols), y = rep(1, length(cols), ylim = c(0, 2), xlim = c(0, length(cols) + 1),
pch = 15, cex = cexv, col = cols)}
colplot <- function(cols, cexv){plot(1:length(cols), y = rep(1, length(cols)), ylim = c(0, 2), xlim = c(0, length(cols) + 1),
pch = 15, cex = cexv, col = cols)}
colplot(c('#FFC1C1', '#C83434', '#3434C8', '#C1C1FF'), 20)
colplot(c('#FFC1C1', '#C83434', '#3434C8', '#C1C1FF'), 10)
col2rgb('deepskyblue')
colplot(c('#FFC1C1', '#C83434', '#00B1F1', '#C1C1FF'), 15)
col2rgb('red')
colplot(c('#FFC1C1', '#E11515', '#1515E1', '#C1C1FF'))
colplot(c('#FFC1C1', '#E11515', '#1515E1', '#C1C1FF'), 10)
col2rgb('cornflowerblue')
100 / 16
colplot(labels, 15)
colplot(labels, 15)
long_df
colplot(c(labels, '#D0C1D0'), 15)
colplot(c(labels, '#B0C1B0'), 15)
colplot(c(labels, '#B071B0'), 15)
colplot(c(labels, '#B091B0'), 15)
colplot(c(labels, '#B0A1B0'), 15)
colplot(c(labels, '#B0A0B0'), 15)
p_t
p_t
p_t
p_t_text
p_t_text
window_titles
p_t_text
?scale_y_discrete
p_t_text
p_t_text
p_t_text
p_t_text
?geom_text
long_df
p_t_text
p_t_Text
p_t_text
p_t_text
long_df
row_text
row_text
row_text
p_t_text
p_t_text
p_t_text
time_var = 'weekend'
long_df
time_var
res_list
res_list[[1]]
res_list[[2]]
time_var = 'weekday'
names(res_list
)
res_list[[time_var]]
time_var
time_var = 'weekday'
long_df
long_df
long_df
long_df
long_df
p_t
p_t_tezxt
p_t_text
p_t_text
time_var = 'weekday'
time_var = 'weekday'
p_t_text
plot_grid
main_plot
plot_list[[1]]
time_var = names(res_list)[[1]]
time_var
long_df
p_t_text
rel_ind
p_t_text
main_plot
time_var
long_df
time_var = 'total'
long_df
time_var = 'total'
crimecat = 'violent'
t_tests
names(t_tests)
t_tests
lapply(t_tests, '[[', 'parameter')
colSums(!zero_mat)
res_mat
res_mat
counts_res
tmat_list = counts_res[['total']]
long_df
long_df[1:3,]
long_df
tmat_list
dim(long_df)
long_df
rownames(tmat_list)
rownames(tmat_list[[1]])
lapply(tmat_list, rownames)
unlist(lapply(tmat_list, rownames))
long_df
long_df
counts_frame_total
counts_frame_total %>% select(-signed_p)
tmat_list$violent
counts_frame_total
counts_frame_total %>% select(-signed_p)
tmat_list[['nonviolent']]
counts_frame_weekend
names(excess_list[[1]][[1]])
diff_mat
diff_mat[1:20,]
colSums(zero_mat)
colSums(!zero_mat)
sum(is.na(diff_mat))
sum(is.na(diff_mat[zero_mat]))
sum(is.na(diff_mat[!zero_mat]))
sum(!is.na(diff_mat[!zero_mat]))
sum(!is.na(diff_mat[zero_mat]))
means_low[1:3,]
hh = diff_mat
sum(!is.na(hh[zero_mat]))
hh[zero_mat] = 23423423
hh[1:20,]
means_high[1,]1
means_high[1,1]
means_low[1,1]
table(is.na(means_high), counts_high == 0)
time_var
time_var = 'total'
crimecat = 'violent'
sum(is.na(diff_mat))
res_mat
0.05 / 20
colMeans(means_high, na.rm = TRUE)
colMeans(means_low, na.rm = TRUE)
res_mat
rm = res_mat
colSums(!is.na(diff_mat))
rel_mat = diff_mat
t_tests
ests
p_val
sign_p
res_mat
res_mat
counts_res[['total']]
counts_frame_total
counts_frame_total %>% select(-signed_P)
counts_frame_total
dim(counts_frame_total)
counts_frame_total %>% select(-signed_p)
time_var = 'total'
crimecat = 'nonviolent'
colSums(!is.na(means_low))
colSums(!is.na(means_high))
colSums(!is.na(diff_mat))
diff_mat
rel_mat = diff_mat
colSums(!is.na(rel_mat))
res_mat
rm = res_mat
time_var
crimecat
res_mat
rm
ER = excess_res
excess_res[[1]][[1]]
ER[[1]][[1]]
ER[[1]][[1]]$means
ER[[1]][[1]][,
ER[[1]][[1]][,'means']
excess_res[[1]][[1]][,'means']
lapply(ER, function(ll){do.call(rbind, lapply(ll, function(x){x[,'means']}))})
r_Z = lapply(ER, function(ll){do.call(rbind, lapply(ll, function(x){x[,'means']}))})
r_NZ = lapply(excess_res, function(ll){do.call(rbind, lapply(ll, function(x){x[,'means']}))})
r_NZ
do.call(rbind, r_NZ)
do.call(rbind, r_Z)
excess_res[[1]]
ER[[1]]
excess_res
excess_frame_total
time_var = 'total'
combine_df
combine_df
combine_df %>% select(-signed_p)
x_labels
combine_df
p_t
p_t
combine_df
combine_df[1:3,]
combine_df[1:5,]
p_t_text
names(combine_df)
p_t_text
p_t
combine_df %>% pull(plot_text)
combine_df
p_t_text
p_t_tet
p_t_text
combine_df
row_text
row_text
row_lim
p_t_text
x_labels
p_t_text
main_plot
main_plot
ls()
names(areas_list)
names(areas_list$total)
names(areas_list$total$violent)
high_area
low_area
high_area
high_area[c(200, 210),]
plot(low_area %>% select(mixed_prop, area_commercial_mixedresidential))
plot(low_area %>% select(vacant_prop, area_vacant_land))
plot(low_area %>% select(comres_prop, area_commercial_business))
plot(low_area %>% select(comres_prop, area_commercial_consumer))
high_area[1:20,]
low_area
colMeans(area_diff)
high_area$vacant_prop
hist(high_area$vacant_prop)
dim(area_diff)
colMeans(area_diff, na.rm = TRUE)
area_diff[1:20,]
area_diff[1:200,]
area_diff[,1
]
low_area[,1]
colMeans(area_diff)
colMeans(area_diff, na.rm = TRUE)
names(block_data)
rlm(crime_violent ~ area_vacant_land, data = block_data)
summary(rlm(crime_violent ~ area_vacant_land, data = block_data))
summary(rlm(crime_violent ~ area_vacant_land, data = blockgroup_data))
summary(rlm(crime_violent ~ area_vacant_land + total, data = blockgroup_data))
summary(rlm(crime_violent ~ area_vacant_land + total, data = block_data))
summary(rlm(crime_violent ~ area_vacant_land + total + income + poverty_metric, data = block_data))
summary(rlm(crime_nonviolent ~ area_vacant_land + total + income + poverty_metric, data = block_data))
colMeans(zero_low)
colMeans(zero_low, na.rm = TRUE)
colMeans(zero_high, na.rm = TRUE)
colMeans(zero_high & zero_low, na.rm = TRUE)
t_list
t_mat
t_list
area_res
CombineTMats(area_res[[1]])
time_var = 'total'
combine_df
area_res[[1]]
combine_df
combine_df
combine_df
p_t
p_t
p_t_text
p_t_text
main_plot
t.test(runif(100, 0, 0.1))
names(t.test(runif(100, 0, 0.1)))
list(t.test(runif(100, 0, 0.1)))
lapply(list(t.test(runif(100, 0, 0.1))), '[[', 'statistics')
lapply(list(t.test(runif(100, 0, 0.1))), '[[', 'statistic')
counts_res
combine_df
combine_df[1:3,]
tmat_list[[1]]
counts_res[[1]]
combine_df[1:3,]
combine_df
p_t_text
time_var = 'total'
combine_df
warnings()
res_list
long_df
p_t_text
time_var 
combine_df
p_t_text
combine_df
p_t_text
summary(rlm(crime_violent ~ area_vacant_land, data = block_data))
summary(rlm(crime_violent ~ area_vacant_land, data = block_data %>% filter(total > 40)))
main_plot
leg_data
leg_end
leg_end
leg_end
leg_end
leg_end
leg_end
leg_end
leg_end
?plot_grid
main_with_legend
leg_end
leg_end
leg_end
main_with_legend
main_with_legend
main_with_legend
main_with_legend
main_with_legend
8 * 1.8
?geom_text
leg_end
res_list[[3]]
crime_diff[[3]][['liquor']]
colSums(crime_diff[[3]][['liquor']])
leg_end
main_plot
main_with_legend
main_plot
plot_grid
?plot_grid
?plot_grid
main_with_legend
main_with_legend
?plot_grid
leg_end
leg_end
leg_end
main_with_legend
empty_box
leg_end_adj
