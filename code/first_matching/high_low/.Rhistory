plot(1:100, col = viridis_pal()(100))
colvec_dens_pre
hist(colvec_dens_pre)
min(colvec_dens_pre)
kern_mult_val = 6
time_var = 'total'
crimecat = 'nonviolent'
kern_mult_val = 2
time_var = 'total'
crimecat = 'nonviolent'
kern_mult_val
dens_df_highlow = dens_df_list[[1]][[1]]
dim(temp_high_low)
sample_n(temp_high_low, 5)
#sample_n(temp_high_low, 5)
table(temp_high_low$high_count)
sum(multiple_high)
table(multiple_high)
table(multiple_low)
temp_high_low[multiple_high,]
min_high = 20
table(temp_high_low$high_crime_val > 20)
min_high = 5
table(temp_high_low$high_crime_val > 5)
#min_high = 
hist(temp_high_low$high_crime_val)
dev.off()
hist(temp_high_low$high_crime_val)
hist(temp_high_low$high_crime_val, 1000)
hist(temp_high_low$high_crime_val, 1000, xlim = c(0, 10))
hist(temp_high_low$high_crime_val, 10000, xlim = c(0, 10))
min_high = 2
hist(temp_high_low$low_crime_val, 10000, xlim = c(0, 10))
table(temp_high_low$high_crime_val > 2)
table(multiple_high, multiple_low)
any_mult
table(any_mult)
which(any_mult)[1]
j = 190
rel_block
all_min
all_max
dist_mat
k = 1
temp
dist_Mat
dist_mat
min_ind
min_ind
temp_high_low[j,]
min_ind[1]
all_min[3,]
temp_high_low[j]
temp_high_low[j,]
hh = 
distGeo(p1 = cbind(temp_high_low$high_lng,
                           temp_high_low$high_lat),
                p2 = cbind(temp_high_low$low_lng,
                           temp_high_low$low_lat))
hist(hh)
hist(hh, 1000)
min(hh)
hist(hh, 1000, xlim = c(0, 20))
hist(hh, 1000, xlim = c(0, 20000))
hist(hh, 1000, xlim = c(0, 200))
mean(hh > 140)
sum(hh)
sum(hh > 140)
i = 1
hist(temp_high_low$high_crime_val)
hist(temp_high_low$high_crime_val[multiple_low])
hist(temp_high_low$low_crime_val[multiple_low])
hist(temp_high_low$dist[multiple_low])
hist(temp_high_low$low_crime_val)
hist(temp_high_low$low_crime_val, 1000)
hist(temp_high_low$low_crime_val, 1000, xlim = c(0, 10))
hist(temp_high_low$low_crime_val, 10000, xlim = c(0, 10))
#plot(block_geom %>% select(area, geometry), col = (1:18872) %in% temp_high_low$block[
b_col <- 'grey90'
b_col <- rep('grey90', 18872)
b_col[temp_high_low$block[temp_high_low$low_crime_val < 1]] = 'salmon'
b_col[temp_high_low$block[temp_high_low$low_crime_val >= 1]] = 'dodgerblue'
plot(block_geom %>% select(area, geometry), col = b_col)
plot(block_geom %>% select(area, geometry), col = b_col, border = NA)
table(temp_high_low$low_crime_val >= 1)
table(temp_high_low$low_crime_val >= 1, temp_high_low$dist >=140)
table(temp_high_low$low_crime_val >= 1, temp_high_low$dist >=100)
dim(temp_high_low)
temp_high_low[1:20,]
hist(dens_diff)
hist(temp_high_low$dens_diff)
dev.off()
hist(temp_high_low$dens_diff)
hist(temp_high_low$dens_diff, 1000)
hist(temp_high_low$dens_diff, 10000,xlim = c(0, 10))
dim(temp_high_low)
CreateCircles
radius_CreateCircles
names(temp_high_low)
plot(County_geom)
plot(high_points, add = TRUE)
dev.off()
plot(high_points)
dim(high_circles)
high_circles[1:2,]
plot(high_circles[1:2])
plot(high_circles[1:2,], col = 'transparent')
dev.off()
plot(high_circles[1:2,], col = 'transparent')
plot(low_circles[1:2,], col = 'transparent', border = 'red')
plot(low_circles[1:2,], col = 'transparent', border = 'red')
plot(high_circles[1:2,], col = 'transparent')
plot(low_circles[1:2,], col = 'transparent', border = 'red', add = TRUE)
#plot(block_geom[c(4,10),], col = 'transparent')
dev.off()
plot(block_geom[c(4,10),], col = 'transparent')
plot(block_geom[c(4,10),] %>% select(area, geometry), col = 'transparent')
plot(high_circles[1:2,], col = 'transparent', add = TRUE, border = 'blue')
plot(low_circles[1:2,], col = 'transparent', border = 'red', add = TRUE)
#cdist <- distGeo(p1 = 
temp_high_low[1,]
cdist <- distGeo(p1 = c(-75.143,  39.95), p2 = cbind(crime$lng, crime$lat))
cdist <- distGeo(p1 = c(-75.143,  39.95), p2 = cbind(crime$long, crime$lat))
#@points(crime %>% filter(cdist < 300)
table(cdist < 300)
points(crime %>% filter(cdist < 300) %>% select(long, lat), col = 'purple', pch = 20, cex = 0.3)
#points(crime %>% filter(cdist < 500) %>% select(long, lat), col = 'purple', pch = 20, cex = 0.3)
time_var
crimecat
qq = PointsInShape(high_circles[1:2,], crime_points)
qq = PointsInShape(high_circles[1:2,], crime_points)
qq2 = PointsInShape(low_circles[1:2,], crime_points)
length(qq)
sum(!is.na(qq))
sum(!is.na(qq2))
temp_high_low[1:2,]
sum(!is.na(qq) & crime$crimecat == 'nonviolent' & hour_ind[[time_var]])
sum(!is.na(qq) & crime$crime_cat == 'nonviolent' & hour_ind[[time_var]])
sum(!is.na(qq2) & crime$crime_cat == 'nonviolent' & hour_ind[[time_var]])
dim(crime_points)
crime_points[1:3,]
length(high_crime)
sum(hour_ind[[time_var]])
sum(crime$crime_cat == crimecat)
sum(hour_ind[[time_var]] &
                                                crime$crime_cat == crimecat)
high_crime[1:20]
ll = lengths(high_crime)
ll
min(temp_high_low$dist)
high_crime
low_crime
PointsInShape
shape_obj = high_circles
points_obj = crime_points[hour_ind[[time_var]] &
                                                crime$crime_cat == crimecat,]
in_list[1:20]
in_list[1:10]
h_ll = lengths(high_crime)
l_ll = lengths(low_crime)
length(h_ll)
length(l_ll)
plot(h_ll, l_ll)
dev.off()
plot(h_ll, l_ll)
abline(a = 0, b = 1, col = 2)
hist(h_ll - l_ll)
hist(h_ll - l_ll, 100)
hist(h_ll - l_ll, 1000, xlim = c(-5, 20))
#bus_po
ls()
names(business_frame)
length(bus_points)
dim(business_frame)
dim(bus_points)
dim(bus_points)
low_bus
low_bus[1:100]
length(high_low_crime[[1]][[1]])
lengths(high_low_crime[[1]][[1]])
high_low_crime[[1]][[1]]$high[1:3]
plot(lengths(high_low_crime[[1]][[1]]$high), lengths(high_low_crime[[1]][[1]]$low))
abline(a = 0, b= 1, col = 2)
high_low_frame[[1]][[2]][1:3,]
mapview(block_geom[18749,])
high_low_frame[[1]][[2]][1:3,]
mapview(block_geom[5,])
high_low_bus[[1]][[2]][[1]]
high_low_bus[[1]][[2]][['high']][[1]]
business_frame[high_low_bus[[1]][[2]][['high']][[1]],1:3]
business_frame[high_low_bus[[1]][[2]][['low']][[1]],1:3]
plot(block_geom[5,] %>% select(area, geometry), col = 'transparent')
points(business_frame[high_low_bus[[1]][[2]][['high']][[1]],1:3] %>% select(lng, lat))
points(business_frame[high_low_bus[[1]][[2]][['low']][[1]],1:3] %>% select(lng, lat))
business_frame[high_low_bus[[1]][[2]][['high']][[1]],1:3]
names(business_frame)
dim(open_hours_bus
)
names(open_hours_bus)
bus_Types
bus_type
bus_types
bus_type = 'gym'
dim(open_type)
open_type[1:20,]
open_type[1:15,]
open_type
consensus_hours
median(open_type[[1]]
median(open_type[,1])
median(open_type$total_open)
median(open_type$weekday_evening_open
)
median(open_type$weekend_night_open)
consensus_hours
consensus_hours
open_type %>% summarise_all(median) %>% slice()
open_type %>% summarise_all(median) %>% slice(1)
consensus_hours
class(consensus_hours)
class(consensus_hours)
consensus_hours
bus_type
bus_types
con_hours_list
con_hours_means
do.call(rbind(con_hours_means))
do.call(rbind,con_hours_means)
con_median_mat
con_mean_mat
length(bus_list[[1]])
dim(bus_cat_mat)
names(business_frame)[1:20]
con_median_mat
con_mean_mat
bus_cat_mat[1:20,]
bus_list$high[[1]]
qq = bus_list$high
qq[1:10]
ind = bus_list$high[[1]]
ind
ff = function(ind){colSums(bus_cat_mat[ind,])
}
ff(bus_List$high[[1]])
ff(bus_list$high[[1]])
ff(bus_list$high[[100]])
ff(bus_list$high[[2]])
ff(bus_list$high[[3]])
high_counts
hc = do.call(rbind, high_counts)
qq = rowSums(hc)
qq
open_hours_cat[1:20,]
high_counts
high_counts[1:50,]
high_counts[1:10,]
low_counts[1:10,]
sum(low_counts)
sum(high_counts)
time_var
lapply(open_hours_catlist, dim)
qq <- as.matrix(open_hours_cat %>% select(cafe:retail))
colSums(qq)
open_f = open_hours_catlist[[1]]
open_f
hours_vec = con_hours_list[[1]]
hours_vec
open_hours_catlist_median[[2]][1:20,]
names(open_hours_catlist_median)
length(open_hours_catlist_median)
dim(open_hours_catlist_median)
open_hours_catlist_median
open_hours_catlist[[1]][1:20,]
open_hours_catlist_median[[1]][1:10,]
names(open_hours_catlist_median)
length(open_hours_catlist_median)
names(con_hours_list
)
names(open_hours_catlist)
length(open_hours_catlist_median)
names(open_hours_catlist_median)
open_hours_catlist_median$retail[1:20,]
open_hours_catlist_mean$retail[1:20,]
time_var
time_name_vec
bus_type
dim(temp_frame)
temp_frame[1:20,]
ind = bus_list$high[[1]]
ind
excess_vec
excess_vecs[1:20]
excess_mat
excess_mat[1:20,]
excess_list[[1]][1:20,]
high_counts[1:20,]
dim(high_counts)
excess_means_counts[1:3,]
names(excess_list)
excess_means_counts[1:3,]
excess_means_counts[1:3,]
excess_counts[1:20,]
excess_means_counts[1:3,]
excess_list[[1]]
dim(excess_list[[1]])
hh = lapply(excess_list, function(x){x[,2]})
hh[[1]]
hh[[2]]
excess_counts[1:20,]
excess_counts[1:20,]
high_low_circles[[time_var]][[crimecat]]$high[1:10]
high_low_circles[[time_var]][[crimecat]]$high[1:10,]
#geom_areas = landuse %>% filter(use_detail %in% c(
unique(landuse$use_detail )
geom_areas = landuse %>% filter(use_detail %in% c('vacant_land', 'commercial_mixedresidential'))
dim(geom_areas)
geom_agg = high_low_circles[[1]][[1]]]$high
geom_agg = high_low_circles[[1]][[[1]]]$high
geom_agg = high_low_circles[[1]][[1]]$high
geom_agg[1:20,]
in_vals[1:20]
table(geom_areas$len_inds)
unique(landuse$use_detail)
dim(landuse)
dim(landuse_rel)
high_areas
geom_agg = high_low_circles[[1]][[2]]$high
geom_agg
geom_areas = landuse
contain_inds
length(contain_inds)
table(lengths(contain_inds))
temp = GetAreas(landuse, high_low_circles[[1]][[2]]$high[c(1:100) * 5,])
temp
dim(temp)
rowsums(temp)
row.sums(temp)
rowSums(temp)
hist(rowSums(temp))
dev.off()
hist(rowSums(temp))
50 * 50 * pi
hist(rowSums(temp), 100)
intersects_inds[1:20]
inter_inds <- unlist(intersects_inds)
c_inds <- unlist(contain_inds)
length(c_inds)
length(inter_inds)
A <- data_frame(bb = c(1,2,3,4,5), hh = runif(5))
A
A %>% filter(c(1,3,5))
all_inters[1:4,]
#plot(geom_agg
geom_agg[4,]
plot(geom_agg[1,])
plot(geom_agg[1,], col = 'transparent')
plot(geom_agg[1,]%>%select(area, geometry), col = 'transparent')
#plot(geom_agg[1,]%>%select(area, geometry), col = 'transparent')
names(geom_agg)
plot(geom_agg[1,]%>%select(row_index, geometry), col = 'transparent')
hh <- all_inters %>% filter(block == geom_agg$block[1])
hh <- all_inters %>% filter(row_index == 1)
hh <- all_inters %>% filter(agg_index == 1)
hh
plot(hh %>% select(agg_index, geometry), col = 'green', add = TRUE)
geom_agg_i
area_frame
geom_agg[1:3,]
dim(high_areas)
dim(low_areas)
hh = (1:100) * 5
hh[1:3]
temp[2,]
high_areas[10,]
time_var
names(high_low_circles)
time_var = 'totoal'
time_var = 'total'
crimecat
names(high_low_circles[[1]])
time_var
high_areas[10,]
sum(high_areas[10,])
dim(high_areas)
qq <- rowSums(high_areas)
hist(qq)
dev.off()
hist(qq)
hist(qq, 100)
high_areas[10,]
temp[2,]
geom_areas = landuse
#geom_agg = 
time_var
crimecat
geom_agg = high_low_circles[[time_var]][[crimecat]]$high
lengths(intersects_inds)
dim(all_inters)
geom_agg[10,]
temp[2,]
geom_agg_i[10,
]
#ai = all_inters %>% filter(agg
geom_agg[1:10,]
ai = all_inters %>% filter(agg_index == 10)
#plot(geom_agg[10,] %>% select(
names(geom_agg)
plot(geom_agg[10,] %>% select(block, geometry))
plot(geom_agg[10,] %>% select(block, geometry), col = 'white')
plot(ai, add = TRUE, col = 'blue')
plot(geom_agg[10,] %>% select(block, geometry), col = 'white')
ai
#ai = all_inters %>%
ai = all_inters %>% filter(agg_index == 10) %>% select(agg_index, geometry)
plot(ai, add = TRUE)
ai
ai = all_inters %>% filter(agg_index == 10)
ai
plot(ai)
sum(ai$area)
area(geom_agg[10,])
st_area(geom_agg[10,])
50 * 50 * pi
Fplot(ai[1,] %>% select(agg_index, geometry)
plot(ai[1,] %>% select(agg_index, geometry), col = 1)
plot(ai %>% select(agg_index, geometry), col = 'white')
plot(ai[1,] %>% select(agg_index, geometry), col = 2)
plot(ai %>% select(agg_index, geometry), col = 'white')
plot(ai[1,] %>% select(agg_index, geometry), col = 2, add = TRUE)
j = 2;plot(ai[j,] %>% select(agg_index, geometry), col = j + 1, add = TRUE)
j =3;plot(ai[j,] %>% select(agg_index, geometry), col = j + 1, add = TRUE)
j =4;plot(ai[j,] %>% select(agg_index, geometry), col = j + 1, add = TRUE)
j =5;plot(ai[j,] %>% select(agg_index, geometry), col = j + 1, add = TRUE)
intersects_inds[[10]]
intersects_inds[1:10]
plot(geom_agg[10,] %>% select(row_index, geometry))
plot(geom_agg[10,] %>% select(row_index, geometry), col = 'white')
plot(geom_areas[intersects_inds[[10]],] %>% select(use_detail, geometry), col = 3, add = TRUE)
plot(geom_areas[intersects_inds[[10]],] %>% select(use_detail, geometry), col = 3)
plot(geom_agg[10,] %>% select(row_index, geometry), col = 'blue', add = TRUE)
geom_areas[intersects_inds[[10]],]
length(unlist(intersects_inds))
length(unique(unlist(intersects_inds)))
ai = all_inters %>% filter(agg_index == 10)
ai
sum(ai$area)
geom_agg_i[1:2,]
geom_agg_i[10,]
temp[2,]
qq = rowSums(geom_agg_i)
#qq = rowSums(geom_agg_i)
class(geom_agg_i)
hist(rowSums(area_frame))
dev.off()
hist(rowSums(area_frame))
max(rowSums(area_frame))
50 * 50 * pi
which.max(rowSums(area_frame))
gemo_agg[3834,]
geom_agg[3834,]
plot(geom_agg[3834,] %>% select(row_index, geometry), col = 'white')
plot(geom_areas[intersects_inds[[3834]],] %>% select(use_detail, geometry), add = TRUE, col = 'blue')
plot(geom_areas[intersects_inds[[3834]],] %>% select(use_detail, geometry), col = 'blue')
plot(geom_agg[3834,] %>% select(row_index, geometry), col = 'white', add = TRUE)
intersects_inds[[3834]]
landuse[intersects_inds[[3834]],]
geom_agg_i[10,]
ai
mapview(geom_agg[10,])
geom_agg[10,]
mapview(block_geom[56,])
block_data[56,]
tt = GetAreas(landuse, high_low_circles[[time_var]][[crimecat]]$high[c(10, 100),])
landuse[1,]
dim(high_areas)
high_areas[1:10,]
dev.off();hist(rowSums(high_areas))
th
tl
dim(diff_mat)
dim(zero_mat)
zero_mat[1:20,]
count_high[1,2]
count_low[1,2]
mean(diff_mat[zero_mat] == 0)
sum(diff_mat[zero_mat] == 0)
sum(diff_mat[!zero_mat] == 0)
mean(diff_mat[!zero_mat] == 0)
qq = which(diff_mat[!zero_mat] == 0, arr.ind = TRUE)
qq[1:20,]
qq
temp_mat = diff_mat
temp_mat[zero_mat] = Inf
qq = which(temp_mat == 0, arr.ind = TRUE)
qq
qq[1:50,]
count_high[17,1]
count_low[17,1]
sum(is.na(diff_mat))
table(zero_mat)
diff_mat[1:100,]
dim(diff_mat)
sum(!is.na(diff_mat[,1])
)
t_tests
