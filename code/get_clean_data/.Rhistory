blockgroup_geom[1:3,]
block_geom[1:3,]
geom_agg = blockgroup_geom
geom_agg$row_index = 1:nrow(geom_agg)
geom_areas[1:5,]
table(geom_areas$len_inds)
class(geom_not)
class(blockgroup_geom)
class(block_geom)
aa <- BlockGroupify(block_geom)
aa = BlockGroupify(block_geom, funs(st_union))
aa = BlockGroupify(block_geom %>% select(-area), funs(st_union))
class(aa)
names(block_geom)
names(block_data)
block_areas[1:5,]
names(block_geom)
BlockGroupify
test_bg
plot(test_bg$area_water, blockgroup_data$area_water)
plot(test_bg$area_water-blockgroup_data$area_water)
which.max(abs(test_bg$area_water-blockgroup_data$area_water))
test_bg[1336,]
blockgroup_data$area_water[1336,]
blockgroup_data[1336,]
blockgroup_data[1336,'area_water']
test_bg[1336,]
names(block_data)
block_data[1:3,]
sum(is.na(block_data$comres_proportion))
table(is.na(block_data$comres_proportion), block_data$area_commericial_consumer)
table(is.na(block_data$comres_proportion), block_data$area_commericial_consumer == 0)
table(is.na(block_data$comres_proportion), block_data$area_commercial_consumer == 0)
table(is.na(block_data$comres_proportion), block_data$area_commercial_consumer == 0)
table(is.na(block_data$comres_proportion), is.numeric(block_data$area_commercial_consumer) == 0)
table(is.na(block_data$comres_proportion))#, is.numeric(block_data$area_commercial_consumer) == 0)
table(is.numeric(block_data$area_commercial_consumer) == 0)
#table(is.numeric(block_data$area_commercial_consumer) == 0)
is.numeric(block_data$area_commercial_consumer)[1:10]
block_data$area_commercial_consumer
is.numeric(block_data$area_commercial_consumer)
is.numeric(block_data$area_commercial_consumer ==0)
table(as.numeric(block_data$area_commercial_consumer) == 0)
table(as.numeric(block_data$area_commercial_consumer) == 0, is.na(block_data$comres_proportion)
)
crime_file
?read_csv
dim(crime)
crime[1:3,]
class(crime)
sum(is.na(crime$Shape)
)
sum(!is.na(crime$Shape))
crime.pre = crime
sample(temp.point, 10)
sample(crime.pre$Shape, 10)
sample(crime.pre$Shape, 10)
sample(crime.pre$Shape, 10)
sample(crime.pre$Shape, 10)
sample(crime.pre$Shape, 10)
sample(crime.pre$Shape, 10)
sample(pre_point, 5)
sample(pre_point, 5)
sample(pre_point, 5)
space_point[1:10]
sample(space_point, 10)
sample(space_point, 10)
sample(space_point, 10)
sample(space_point, 10)
nchar(NA)
shape = crime$Shape
space_point[1:10]
shape[1:10]
shape <- crime$Shape
dim(longlatmat)
longlatmat[1:10,]
plot(sample_n(longlatmat, 3000))
plot(longlatmat[1:1000,])
names(crim)
names(crime)
crime[1:20,]
names(crime)
class(crime)
names(crime)
crime[1:10,]
crime[1:10,]
crime[1:10,]
crimetypes
names(crime)
crime[1000,'UCR Code']
table(crime$UCR Code
)
table(crime$UCR Code)
crime[1:10,]
cc = crime
crime[1:3,]
crime[1:3,]
crimeframe
crime[1:3,]
crime[1:10,]
str(crime)
crime[1:10,]
crime$timedate <- NULL
crime[1:10,]
table(crime$crimetype, crime$General_Crime_Category)
table(crime$General_Crime_Category, crime$crimetype)
names(crime)
crime[1:3,]
sample_n(crime, 10)
crime <- crime %>%rename_all(slash_to_h)
crime[1:3,]
names(crime)[1] = 'Dispatch_Date_Time'
sample_n(crime, 5)
sample_n(crime, 5)
cc = crime
cc[1:3,]
names(crime)
crime[1:3,]
crime = cc
crime[1:3,]
?st_point
qq = st_multipoint(crime[,c('long', 'lat')])
crime_points[1:20,]
class(crime_points)
plot(crime_points[1:20,])
qq = st_within(crime_points, blockgroup_geom)
qq[1:20]
dim(crime_points)
length(crime_points)
crime_points
#length(crime_points)
?st_sf
plot(crime_points)
length(crime_points)
cc <- crime_points[1:10]
length(cc)
object_size(crime_poitns)
object_size(crime_points)
object_size(cc)
cc[[2]]
hhh = st_point(cbind(crime$long, crime$lat))
class(crime_points)
dim(crime_points)
crime_points[1:10]
crime_points[1:10,]
#crime_points[1:10,]
?st_read
plot(sample_n(crime_points, 100))
plot(sample_n(crime_points, 100), pch = 20)
plot(sample_n(crime_points, 1000), pch = 20, cex = 0.4)
plot(County_geom)
plot(sample_n(crime_points, 3000), pch = 20, cex = 0.2, add = TRUE, col = 3)
plot(sample_n(crime_points, 3000), pch = 20, cex = 0.2, add = TRUE)
dim(in_county_ind)
sum(in_county_ind)
mean(in_county_ind)
sum(in_county_ind)
sum(!in_county_ind)
plot(County_geom)
#plot(crime_points, add = TRUE
crime[1:10,]
dim(crime_points)
plot(County_geom)
plot(crime_points[!in_county_ind,], col = 2)
plot(County_geom)
plot(crime_points[!in_county_ind,], col = 2, add = TRUE, pch = 19)
names(crime_points)
points_obj <- crime_points
shape_obj <- block_geom
in_list <- st_within(points_obj, shape_obj)
dim(in_list)
in_list[[1]]
ll <- lengths(in_list)
table(ll)
in_list <- list(list(NULL), 2, c(2,3,4))
in_list
in_list <- list(NULL, 2, c(2,3,4))
in_list
lengths(in_list)
len_list = lengths(in_list)
in_list
in_list
in_list <- list(NULL, 2, c(2,3,4))
il = in_list
in_list %<>% map_if(len_list > 2, function(x){sample(x, 1)})
in_list
in_list = il
map_if(in_list, len_list > 2, function(x){sample(x, 1)})
map_if(in_list, len_list > 2, function(x){sample(x, 1)})
map_if(in_list, len_list > 2, function(x){sample(x, 1)})
map_if(in_list, len_list > 2, function(x){sample(x, 1)})
map_if(in_list, len_list > 2, function(x){sample(x, 1)})
map_if(in_list, len_list > 2, function(x){sample(x, 1)})
map_if(in_list, len_list > 2, function(x){sample(x, 1)})
map_if(in_list, len_list > 2, function(x){sample(x, 1)})
map_if(in_list, len_list > 2, function(x){sample(x, 1)})
in_list[1:10]
#flatten_int(
templ <- list(NULL, c(2), c(45,46,47), rnorn(2))
templ <- list(NULL, c(2), c(45,46,47), rnorm(2))
templ
flatten_int(templ)
map_int(templ, function(x){x[1]})
templ
map_int(templ[2:4], function(x){x[1]})
map_dbl(templ[2:4], function(x){x[1]})
map_dbl(templ[1:4], function(x){x[1]})
in_list[which(len_list == 0)[1:5]]
templ <- list(c(), c(2,3,4))
templ
templ <- list(rep(1, 0), c(2,3,4))
templ
templ
map_dbl(templ)
map_dbl(templ, '[', 1)
map_dbl(templ, function(x){x[[1]]})
map_dbl(templ, function(x){x[1]})
map_dbl(templ, 1)
un_list[1:3]
un_list[which(len_list == 0)[1:5]]
block_indicies <- un_list
qq = PointsInShape(block_geom, crime_points[1:5000])
qq = PointsInShape(block_geom, crime_points[1:5000,])
qq
qq[100]
block_indices[100]
block_indices <- un_list
block_indices[100]
identical(qq, block_indices[1:5000])
names(crime)
table(crime$block)
hh = table(crime$block)
length(hh)
hh[1:30]
hist(hh)
dev.off(
)
hist(hh)
hist(hh, 1000)
which.max(hh)
table(crime$censustract)
plot(table(crime$censustract))
length(table(crime$censustract))
plot(table(crime$censustract)[1:382])
plot(table(crime$censustract)[1:350])
min(crime$timedate)
max(crime$timedate)
hh = table(crime$blockgroup)
which.max(hh)
hh[1]
block_data[1:3,]
oo = order(crime$timedate)
oo[1:500]
plot(oo[1:10000])
#plot(oo[sample(
plot(crime$timedate[sort(sample(nrow(crime), 5000))])
crime[1,]
plot(crime$timedate[sort(sample(nrow(crime), 5000))])
crime$timedate[1,]
crime$timedate[1]
min_time
max_time
dim(crime)
crime[1:100,]
sample_n(crime, 5)
crime[1:10,]
sample_n(crime, 5)
sample_n(crime, 5)
crime[1:10,]
crime$time[1:10]
hh = crime
crime[1:20,]
ii <- sample(nrow(hh), 100)
hh[ii,]
crime[ii,]
names(crime)
table(crime$crimetype, crime$ucr)
hh = as.matrix(table(crime$crimetype, crime$ucr))
hh
hh2 <- hh > 0
hh2
colSums(hh)
colSums(hh2)
rowSums(hh2)
rowSums(hh2) == 2
which(rowSums(hh2) == 2)
hh2[21,]
crime[1:20,]
crime_blockcount[1:20,]
dim(crime_blockcount)
crime_blockcount[1:20,]
dim(crime_blockgroupcount)
sample_n(crime_blockgroupcount, 10)
dim(crime_blockgroupcount)
crime_blockgroupcount[1:3,]
sample_n(crime_blockgroupcount, 5)
class(crime_blockgroupcount)
class(crime_blockgroupcount)
class(crime_blockgroupcount)
dim(crime_blockgroupcount)
sample_n(crime_blockgroupcount, 5)
class(crime_blockcount)
class(crime_blockcount)
dim(crime_blockgroup)
dim(crime_blockcount)
names(crime_blockgroup)
names(crime_blockcount)
unique(crime$ucr)
unique(paste0(crime$ucr, crime$crimetype))
crime %>% select(ucr, crimetype) %>% distinct()
crime %>% select(ucr, crimetype) %>% distinct() %>% arrange(ucr)
hist(crime_blockcount_vio)
hist(crime_blockcount_vio, 100)
names(crime_blockcount)
sum(crime_blockcount_vio)
sum(crime_blockgroupcount_vio)
dim(crime_blockcount)
sum(crime_blockcount_vio)
sum(crime_blockgroupcount_vio)
case_when()
crime %>% select(ucr, crimetype) %>% distinct()
crime %>% select(crimetype) %>% distinct()
hh = crime %>% select(crimetype) %>% distinct()
hh
hh$crimtype
hh$crimetype
hh$crimetype %in% violent_type
violent_type %in% hh$crimetype
nonviolent_type %in% hh$crimetype
vice_type %in% hh$crimetype
other_type %in% hh$crimetype
length(violent_type)
length(nonviolent_type)
length(other_type)
length(vice_type)
5 + 5 + 11 + 3
length(hh$crimetype)
tt <- c(violent_type, nonviolent_type, vice_type, other_type)
length(tt)
length(unique(tt))
hh$crimetype %in% tt
hh[17]
hh[17,]
dim(crime)
crime[1,]
table(crime$crime_cat)
hh = crime %>% select(ucr, crimetype, crime_cat) %>% distinct()
hh
hh = crime %>% select(ucr, crimetype, crime_cat) %>% distinct() %>% arrange(ucr)
hh
table(crime$crime_cat)
crime_blockcount[1:20,]
crime_blockcount[1:20,]
dime(crime_blockcount)
dim(crime_blockcount)
dim(crime_blockgroupcount)
crime_blockgroup_cat[1:20,]
crime_blockgroupcount_cat[1:20,]
hh <- crime_blockgroupcount_cat %>% select(-c(crime_blockgroup, crime_censustract)) %>% rowSums()
hh
hh <- crime_blockgroupcount_cat %>% select(-c(crime_blockgroup, crime_censustract)) %>% rowSums(na.rm = TRUE)
table(hh)
hist(hh)
hh2 <- crime_blockgroupcount %>% select(-c(crime_blockgroup, crime_censustract)) %>% rowSums(na.rm = TRUE)
hh2[1:20]
hh[1:20]
sum(abs(hh - hh2))
names(block_data)
sum(is.na(block_data))
names(block_data)
left_table = block_data
join_table = crime_blockcount
by_vec = c('row_index' = 'crime_block')
new_cols
by_vec
by_vec
new_cols
na_list_0
temp <- ZeroLJoin(block_data, crime_blockcount_cat, by_vec = c('row_index' = 'crime_block'), 0)
temp <- ZeroLJoin(block_data, crime_blockcount_cat, by_vec = c('row_index' = 'crime_block'), 0)
temp[1:20,]
dev.off()
temp <- block_geom
temp <- ZeroLJoin(block_data, crime_blockcount_cat, by_vec = c('row_index' = 'crime_block'), 0)
tt <- block_geom
tt$crime_violent = temp$crime_violent
tt <- blockgroup_geom
sample_n(temp, 3)
max(block_data$vacant_proportion)
max(block_data$mixeduse_proportion)
which.max(block_data$mixeduse_proportion)
block_data[9615,]
which.max(block_data$mixeduse_proportion)
block_data[9615,]
crime_blockgroupcount[1:3,]
class(crime_blockgroupcount)
blockgroup_data[1:3,]
block_data[1:3,]
blockgroup_data[1,]
blockgroup_data$crime_censustract <- NULL
blockgroup_data$crime_nonviolent <- NULL
blockgroup_data$crime_vice <- NULL
blockgroup_data$crime_violent <- NULL
block_data[1,]
blockgroup_data[1:3,]
blockgroup_data$row_index
blockgroup_data$row_index[1:3]
blockgroup_data$row_index[1:30]
dim(blockgroup_data)
save_location
tt = block_data
load(file = save_location)
dim(block_data)
dim(blockgroup_data)
block_data[1:3,]
tt[1:3,]
block_data[1:3,]
tt[1:3,]
block_areas[1:30]
length(block_areas)
block_areas
dim(blockgroup_data)
dim(blockgroup_data)
dim(block_data)
block_data[1,]
tt[1,
]
dim(block_data)
dim(block_data)
dim(block_data)
crime_blockgroupcount_cat
crime_blockgroupcount_cat[1,]
names(crime_blockgroupcount_cat)
names(crime_blockgroupcount)
dim(crime_blockgroupcount)
dim(crime_blockgroupcount)
crime_blockgroupcount[1:20,]
dim(crime_blockgroupcount)
plot(order(crime_blockgroupcount$row_index))
dim(crime_blockgroupcount_cat)
dim(crime_blockgroupcount_cat)
names(crime_blockgroupcount)
dim(blockgroup_data)
dim(blockgroup_data)
blockgroup_data[1:3,]
blockgroup_data$crime_blockgroup <- NULL
blockgroup_data$crime_censustract <- NULL
blockgroup_data[1:3,]
blockgroup_data[1:3,]
names(blockgroup_data)
cbind(names(blockgroup_data), names(block_data)
)
qq = cbind(names(blockgroup_data), names(block_data))
qq[,1] == qq[,2]
sum(blockgroup$crime_theft)
sum(blockgroup_data$crime_theft)
sum(block_data$crime_theft)
sum(block_data$crime_murder)
sum(blockgroup_data$crime_murder)
sum(blockgroup_data$crime_violent)
sum(block_data$crime_violent)
place_location
gplaces_frame[1:20,]
gplaces.frame[1:20,]
gplaces.frame[1:2,]
gplaces_frame <- as_tibble(gplaces.frame)
gplaces_frame[1:2,]
names(gplaces_frame)
dot_replace <- function(x){gsub('.', '_', x, fixed = TRUE)}
gplaces_frame %<>% rename_all(dot_replace)
gplaces_frame[1:20,]
dim(gplaces_frame[1:20,])
dim(gplaces_frame[1:2,])
gplaces_frame[1:2,]
gplaces_frame %<>% select(name, lng, lat, everything())
gplaces_frame[1:2,]
save(gplaces_frame, file = paste0(place_location, 'gplaces_frame.rdata')
)
yplaces.frame[1:2,]
yplaces_frame <- as_tibble(yplaces.frame) %>% rename_all(dot_replace)
yplaces_frame[1:2,]
yplaces_frame %<>% select(name, lng, lat, everything())
yplaces_frame[1:2,]
save(yplaces_frame, file = paste0(place_location, 'yplaces_frame.rdata'))
fplaces.frame[1:3,]
names(gplaces_frame)
names(gplaces_frame)[1:50]
names(yplaces_frame)[1:50]
fplaces_frame <- as_tibble(fplaces.frame) %>% rename_all(dot_replace)
names(fplaces_frame)[1:50]
fplaces_frame %<>% select(name, lng, lat, everything())
names(fplaces_frame)[1:50]
save(fplaces_frame, file = paste0(place_location, 'fplaces_frame.rdata'))
length(all_yelp_cats)
all_yelp_cats[1:3]
length(all_yelp_cats)
length(all_yelp_parents)
google_cats_list
 length(all_google_cats)
getwd()
